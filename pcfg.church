; vim: ft=scheme
(define (terminal t) (list (list 'terminal t)))
(define (terminal- t) (list 'terminal t))

(define (unwrap-terminal t) (second t))

(define (inner-tree-unfold transition start-symbol depth)
  (if (terminal? start-symbol)
      (unwrap-terminal start-symbol)   
      (pair start-symbol 
            (map (lambda (symbol) (inner-tree-unfold transition symbol (- depth 1))) (transition start-symbol depth)))))

(define MAX-DEPTH 10)

(define (tree-unfold transition start-symbol)
  (inner-tree-unfold transition start-symbol MAX-DEPTH))

(define (terminal? symbol)
  (if (list? symbol)
      (equal? (first symbol) 'terminal)
      false))

(define (from depth terminals non-terminals)
  "Builds an equally weighted multinomial distribution"
  ;(if (= depth 0)
      ;(multinomial (list (terminal 'END)) (list (/ 1 1)))
  (let ((vals (if (= depth 0) terminals (append terminals non-terminals))))
      (multinomial vals (map (lambda (s) (/ 1 (length vals))) vals))));)

